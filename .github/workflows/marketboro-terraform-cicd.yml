name: Marketboro Terraform CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**' # Trigger the workflow only when files in the terraform directory are pushed

jobs:
  configure_aws:
    name: Configure AWS Credentials and Install Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1

  deploy_vpc:
    name: Deploy VPC
    runs-on: ubuntu-latest
    needs: configure_aws # This job depends on 'configure_aws' job to complete first
    steps:
      - name: Terraform Init
        working-directory: ./terraform/dev/vpc
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform/dev/vpc
        run: terraform apply -auto-approve -var="ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }}" -var="SECRET_KEY=${{ secrets.SECRET_KEY }}"

  deploy_storage:
    name: Deploy Storage
    runs-on: ubuntu-latest
    needs: [deploy_vpc] # This job depends on 'deploy_vpc' job to complete first
    steps:
      - name: Terraform Init
        working-directory: ./terraform/dev/storage
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform/dev/storage
        run: terraform apply -auto-approve -var="ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }}" -var="SECRET_KEY=${{ secrets.SECRET_KEY }}"

  deploy_instance:
    name: Deploy Instance
    runs-on: ubuntu-latest
    needs: [deploy_storage] # This job depends on 'deploy_storage' job to complete first
    steps:
      - name: Terraform Init
        working-directory: ./terraform/dev/instance
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform/dev/instance
        run: terraform apply -auto-approve -var="ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }}" -var="SECRET_KEY=${{ secrets.SECRET_KEY }}"